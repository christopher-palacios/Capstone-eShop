{"ast":null,"code":"var _jsxFileName = \"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/client/src/components/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const token = sessionStorage.getItem(\"token\");\n  const [alert, setAlert] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: routeProps => !token ? \"hey\" : /*#__PURE__*/_jsxDEV(Component, { ...routeProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProtectedRoute, \"KH+znnE6SxMJmDxjFjgSYKMcqRM=\");\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/client/src/components/ProtectedRoute.js"],"names":["React","useState","Route","Redirect","ProtectedRoute","component","Component","rest","token","sessionStorage","getItem","alert","setAlert","routeProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAxB,EAA2D;AAAA;;AACzD,QAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AACA,sBACE,QAAC,KAAD,OACMM,IADN;AAEE,IAAA,MAAM,EAAGM,UAAD,IAAiB,CAACL,KAAD,GAAS,KAAT,gBAAiB,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA;AAF5C;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GATQT,c;;KAAAA,c;AAWT,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction ProtectedRoute({ component: Component, ...rest }) {\n  const token = sessionStorage.getItem(\"token\");\n  const [alert, setAlert] = useState(false);\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) => (!token ? \"hey\" : <Component {...routeProps} />)}\n    />\n  );\n}\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}