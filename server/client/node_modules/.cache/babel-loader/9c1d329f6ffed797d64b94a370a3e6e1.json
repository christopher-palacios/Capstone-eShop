{"ast":null,"code":"var _jsxFileName = \"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/AppContext/AppContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY.toString());\nconst baseUrl = \"http://localhost:8080/api\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const token = localStorage.getItem(\"token\"); // const user = localStorage.getItem(\"user\");\n\n  const [selectedCategory, setSelectedCategory] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [categoryList, setCategoryList] = useState([]);\n  const [randomItems, setRandomItems] = useState([]);\n  const [currentUser, setCurrentUser] = useState();\n  const [drop, setDrop] = useState(\"\");\n  const [cart, setCart] = useState([]);\n  const [purchased, setPurchased] = useState();\n  const [showCheckoutModal, setShowCheckoutModal] = useState(false);\n  const [logInModalShow, setLogInModalShow] = useState(false);\n  const [signUpModalShow, setSignUpModalShow] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  let storage = JSON.parse(localStorage.getItem(\"guestCart\"));\n  const guestCart = {\n    isOpen: true,\n    products: [],\n    cartQuantity: 0,\n    cartTotal: 0\n  };\n  console.log(typeof stripePromise); //Get list of categories\n\n  const getCategoryList = async () => {\n    axios.get(`${baseUrl}/categories`).then(res => {\n      setCategoryList(res.data);\n    }).catch(err => swal(err.message));\n  }; //Get product list\n\n\n  const getProductList = async () => {\n    axios.get(`${baseUrl}/product/list`).then(res => {\n      setProductList(res.data);\n    }).catch(err => swal(err.message));\n  }; //CART FUNCTIONS//\n  //Get cart\n\n\n  const getCart = async () => {\n    axios.get(`${baseUrl}/cart`, {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    }).then(res => setCart(res.data)).catch(err => swal(\"getCart\", err.message));\n  }; //INCREASE product quantity in cart\n\n\n  const increaseQty = async (product, cartId) => {\n    if (!token) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\")); //find product index in guest cart\n\n      let index = guestCart.products.map(product => product.name).indexOf(product.name); //update product quantity\n\n      guestCart.products[index].quantity = guestCart.products[index].quantity + 1;\n      guestCart.products[index].productTotal = guestCart.products[index].productTotal + product.price; //recalculate cart totals\n\n      guestCart.cartTotal = guestCart.products.map(product => product.productTotal).reduce((acc, curr) => acc + curr);\n      guestCart.cartQuantity = guestCart.products.map(product => product.quantity).reduce((acc, curr) => acc + curr); //save guest cart to state and local storage\n\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else if (token) {\n      try {\n        await axios.put(`${baseUrl}/cart/increase/${cartId}`, {\n          product,\n          cartId\n        }, {\n          headers: {\n            authorization: `Bearer ${token}`\n          }\n        }).then(res => setCart(res.data), setLoading(false));\n      } catch (error) {\n        swal(\"Please login or create an account to add items to your cart\", error.message);\n      }\n    }\n  }; //DECREASE product quantity in cart\n\n\n  const decreaseQty = async (product, cartId) => {\n    if (!token) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\")); //find product index in guest cart\n\n      let index = guestCart.products.map(product => product.name).indexOf(product.name); //update product quantity\n\n      guestCart.products[index].quantity = guestCart.products[index].quantity - 1;\n      guestCart.products[index].productTotal = guestCart.products[index].productTotal - product.price; //recalculate cart totals\n\n      guestCart.cartTotal = guestCart.products.map(product => product.productTotal).reduce((acc, curr) => acc + curr);\n      guestCart.cartQuantity = guestCart.products.map(product => product.quantity).reduce((acc, curr) => acc + curr); //save guest cart to state and local storage\n\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else {\n      try {\n        await axios.put(`${baseUrl}/cart/decrease/${cartId}`, {\n          product\n        }, {\n          headers: {\n            authorization: `Bearer ${token}`\n          }\n        }).then(res => setCart(res.data)).catch(err => swal(err.message));\n      } catch (error) {\n        swal(error.message);\n      }\n    }\n  }; //DELETE selected product from cart\n\n\n  const deleteProduct = async (product, cartId) => {\n    if (!token) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\")); //remove selected product from guest cart\n\n      if (guestCart.products.length === 1) {\n        guestCart.products = [];\n        guestCart.cartTotal = 0;\n        guestCart.cartQuantity = 0;\n      } else if (guestCart.products.length > 1) {\n        guestCart.products = guestCart.products.filter(item => item.name !== product.name); //recalculate cart totals\n\n        guestCart.cartTotal = guestCart.products.map(product => product.productTotal).reduce((acc, curr) => acc + curr);\n        guestCart.cartQuantity = guestCart.products.map(product => product.quantity).reduce((acc, curr) => acc + curr);\n      } //save guest cart to state and local storage\n\n\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else {\n      try {\n        await axios.put(`${baseUrl}/cart/delete/${cartId}`, {\n          product,\n          cartId\n        }, {\n          headers: {\n            authorization: `Bearer ${token}`\n          }\n        }).then(res => setCart(res.data)).catch(err => swal(err.message));\n      } catch (error) {\n        swal(error.message);\n      }\n    }\n  }; // const getRandom = () => {\n  //   const randomIndex = Math.floor(Math.random() * categoryList?.length);\n  //   const randomId = categoryList[randomIndex]?._id;\n  //   axios.get(`${baseUrl}/categories/${randomId}`).then((res) => {\n  //     setRandomItems(res.data);\n  //     console.log(res.data);\n  //   });\n  // };\n\n\n  useEffect(() => {\n    getCategoryList();\n    getProductList(); // getRandom();\n\n    if (!token && storage === null) {\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else if (!token && storage) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n      setCart(guestCart);\n    }\n\n    if (token) {\n      localStorage.removeItem(\"guestCart\");\n      getCart();\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      randomItems,\n      setRandomItems,\n      isSignedIn,\n      setIsSignedIn,\n      logInModalShow,\n      setLogInModalShow,\n      signUpModalShow,\n      setSignUpModalShow,\n      showCheckoutModal,\n      setShowCheckoutModal,\n      selectedCategory,\n      setSelectedCategory,\n      selectedProduct,\n      setSelectedProduct,\n      loading,\n      setLoading,\n      categoryList,\n      setCategoryList,\n      productList,\n      currentUser,\n      setCurrentUser,\n      getCategoryList,\n      drop,\n      setDrop,\n      cart,\n      setCart,\n      token,\n      increaseQty,\n      decreaseQty,\n      deleteProduct,\n      purchased,\n      setPurchased\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"BEri3RQcUgus+A2Ihg8c+GrLffw=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/AppContext/AppContext.jsx"],"names":["React","createContext","useState","useEffect","swal","axios","loadStripe","stripePromise","process","env","REACT_APP_STRIPE_KEY","toString","baseUrl","AppContext","ContextProvider","children","token","localStorage","getItem","selectedCategory","setSelectedCategory","productList","setProductList","selectedProduct","setSelectedProduct","loading","setLoading","categoryList","setCategoryList","randomItems","setRandomItems","currentUser","setCurrentUser","drop","setDrop","cart","setCart","purchased","setPurchased","showCheckoutModal","setShowCheckoutModal","logInModalShow","setLogInModalShow","signUpModalShow","setSignUpModalShow","isSignedIn","setIsSignedIn","storage","JSON","parse","guestCart","isOpen","products","cartQuantity","cartTotal","console","log","getCategoryList","get","then","res","data","catch","err","message","getProductList","getCart","headers","authorization","increaseQty","product","cartId","index","map","name","indexOf","quantity","productTotal","price","reduce","acc","curr","setItem","stringify","put","error","decreaseQty","deleteProduct","length","filter","item","removeItem"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\n\nimport { loadStripe } from \"@stripe/stripe-js\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY.toString());\n\nconst baseUrl = \"http://localhost:8080/api\";\n\nexport const AppContext = createContext();\n\nexport const ContextProvider = ({ children }) => {\n  const token = localStorage.getItem(\"token\");\n  // const user = localStorage.getItem(\"user\");\n  const [selectedCategory, setSelectedCategory] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [categoryList, setCategoryList] = useState([]);\n  const [randomItems, setRandomItems] = useState([]);\n  const [currentUser, setCurrentUser] = useState();\n  const [drop, setDrop] = useState(\"\");\n  const [cart, setCart] = useState([]);\n  const [purchased, setPurchased] = useState();\n  const [showCheckoutModal, setShowCheckoutModal] = useState(false);\n  const [logInModalShow, setLogInModalShow] = useState(false);\n  const [signUpModalShow, setSignUpModalShow] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  let storage = JSON.parse(localStorage.getItem(\"guestCart\"));\n  const guestCart = {\n    isOpen: true,\n    products: [],\n    cartQuantity: 0,\n    cartTotal: 0,\n  };\n  console.log(typeof stripePromise);\n  //Get list of categories\n  const getCategoryList = async () => {\n    axios\n      .get(`${baseUrl}/categories`)\n      .then((res) => {\n        setCategoryList(res.data);\n      })\n      .catch((err) => swal(err.message));\n  };\n\n  //Get product list\n  const getProductList = async () => {\n    axios\n      .get(`${baseUrl}/product/list`)\n      .then((res) => {\n        setProductList(res.data);\n      })\n      .catch((err) => swal(err.message));\n  };\n\n  //CART FUNCTIONS//\n\n  //Get cart\n  const getCart = async () => {\n    axios\n      .get(`${baseUrl}/cart`, {\n        headers: {\n          authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => setCart(res.data))\n      .catch((err) => swal(\"getCart\", err.message));\n  };\n\n  //INCREASE product quantity in cart\n  const increaseQty = async (product, cartId) => {\n    if (!token) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n      //find product index in guest cart\n      let index = guestCart.products\n        .map((product) => product.name)\n        .indexOf(product.name);\n      //update product quantity\n      guestCart.products[index].quantity =\n        guestCart.products[index].quantity + 1;\n      guestCart.products[index].productTotal =\n        guestCart.products[index].productTotal + product.price;\n      //recalculate cart totals\n      guestCart.cartTotal = guestCart.products\n        .map((product) => product.productTotal)\n        .reduce((acc, curr) => acc + curr);\n      guestCart.cartQuantity = guestCart.products\n        .map((product) => product.quantity)\n        .reduce((acc, curr) => acc + curr);\n      //save guest cart to state and local storage\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else if (token) {\n      try {\n        await axios\n          .put(\n            `${baseUrl}/cart/increase/${cartId}`,\n            { product, cartId },\n            {\n              headers: {\n                authorization: `Bearer ${token}`,\n              },\n            }\n          )\n          .then((res) => setCart(res.data), setLoading(false));\n      } catch (error) {\n        swal(\n          \"Please login or create an account to add items to your cart\",\n          error.message\n        );\n      }\n    }\n  };\n\n  //DECREASE product quantity in cart\n  const decreaseQty = async (product, cartId) => {\n    if (!token) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n      //find product index in guest cart\n      let index = guestCart.products\n        .map((product) => product.name)\n        .indexOf(product.name);\n      //update product quantity\n      guestCart.products[index].quantity =\n        guestCart.products[index].quantity - 1;\n      guestCart.products[index].productTotal =\n        guestCart.products[index].productTotal - product.price;\n      //recalculate cart totals\n      guestCart.cartTotal = guestCart.products\n        .map((product) => product.productTotal)\n        .reduce((acc, curr) => acc + curr);\n      guestCart.cartQuantity = guestCart.products\n        .map((product) => product.quantity)\n        .reduce((acc, curr) => acc + curr);\n      //save guest cart to state and local storage\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else {\n      try {\n        await axios\n          .put(\n            `${baseUrl}/cart/decrease/${cartId}`,\n            { product },\n            {\n              headers: {\n                authorization: `Bearer ${token}`,\n              },\n            }\n          )\n          .then((res) => setCart(res.data))\n          .catch((err) => swal(err.message));\n      } catch (error) {\n        swal(error.message);\n      }\n    }\n  };\n\n  //DELETE selected product from cart\n  const deleteProduct = async (product, cartId) => {\n    if (!token) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n      //remove selected product from guest cart\n      if (guestCart.products.length === 1) {\n        guestCart.products = [];\n        guestCart.cartTotal = 0;\n        guestCart.cartQuantity = 0;\n      } else if (guestCart.products.length > 1) {\n        guestCart.products = guestCart.products.filter(\n          (item) => item.name !== product.name\n        );\n        //recalculate cart totals\n        guestCart.cartTotal = guestCart.products\n          .map((product) => product.productTotal)\n          .reduce((acc, curr) => acc + curr);\n        guestCart.cartQuantity = guestCart.products\n          .map((product) => product.quantity)\n          .reduce((acc, curr) => acc + curr);\n      }\n\n      //save guest cart to state and local storage\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else {\n      try {\n        await axios\n          .put(\n            `${baseUrl}/cart/delete/${cartId}`,\n            { product, cartId },\n            {\n              headers: {\n                authorization: `Bearer ${token}`,\n              },\n            }\n          )\n          .then((res) => setCart(res.data))\n          .catch((err) => swal(err.message));\n      } catch (error) {\n        swal(error.message);\n      }\n    }\n  };\n  // const getRandom = () => {\n  //   const randomIndex = Math.floor(Math.random() * categoryList?.length);\n  //   const randomId = categoryList[randomIndex]?._id;\n\n  //   axios.get(`${baseUrl}/categories/${randomId}`).then((res) => {\n  //     setRandomItems(res.data);\n  //     console.log(res.data);\n  //   });\n  // };\n\n  useEffect(() => {\n    getCategoryList();\n    getProductList();\n    // getRandom();\n    if (!token && storage === null) {\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else if (!token && storage) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n      setCart(guestCart);\n    }\n\n    if (token) {\n      localStorage.removeItem(\"guestCart\");\n      getCart();\n    }\n  }, [token]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        randomItems,\n        setRandomItems,\n        isSignedIn,\n        setIsSignedIn,\n        logInModalShow,\n        setLogInModalShow,\n        signUpModalShow,\n        setSignUpModalShow,\n        showCheckoutModal,\n        setShowCheckoutModal,\n        selectedCategory,\n        setSelectedCategory,\n        selectedProduct,\n        setSelectedProduct,\n        loading,\n        setLoading,\n        categoryList,\n        setCategoryList,\n        productList,\n        currentUser,\n        setCurrentUser,\n        getCategoryList,\n        drop,\n        setDrop,\n        cart,\n        setCart,\n        token,\n        increaseQty,\n        decreaseQty,\n        deleteProduct,\n        purchased,\n        setPurchased,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}