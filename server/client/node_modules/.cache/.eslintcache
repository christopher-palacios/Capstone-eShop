[{"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/index.js":"1","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/reportWebVitals.js":"2","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/App.js":"3","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/AppContext/AppContext.jsx":"4","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/pages/Categories/Catgegories.jsx":"5","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/pages/Home/Home.jsx":"6","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/pages/itemList/itemList.jsx":"7","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/pages/ProductDetail/ProductDetail.jsx":"8","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Header/Header.jsx":"9","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/pages/ShoppingCart/ShoppingCart.jsx":"10","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Carousel/Carousel.jsx":"11","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/LoginModal/LogInModal.jsx":"12","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/SignUpModal/SignUpModal.jsx":"13","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/CheckoutModal/CheckoutModal.jsx":"14","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Stripe/Stripe.jsx":"15","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Field/Field.jsx":"16","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Footer/Footer.jsx":"17","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Contact/Contact.jsx":"18","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/About/About.jsx":"19"},{"size":503,"mtime":1618449602850,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1618380389318,"results":"22","hashOfConfig":"21"},{"size":1283,"mtime":1624143779637,"results":"23","hashOfConfig":"21"},{"size":8046,"mtime":1624125923019,"results":"24","hashOfConfig":"21"},{"size":2436,"mtime":1624143589535,"results":"25","hashOfConfig":"21"},{"size":2303,"mtime":1624143606211,"results":"26","hashOfConfig":"21"},{"size":3641,"mtime":1624143647161,"results":"27","hashOfConfig":"21"},{"size":5226,"mtime":1624143688641,"results":"28","hashOfConfig":"21"},{"size":4512,"mtime":1624143988228,"results":"29","hashOfConfig":"21"},{"size":4953,"mtime":1624125528508,"results":"30","hashOfConfig":"21"},{"size":1779,"mtime":1624063136150,"results":"31","hashOfConfig":"21"},{"size":2853,"mtime":1624059610372,"results":"32","hashOfConfig":"21"},{"size":2887,"mtime":1624127218940,"results":"33","hashOfConfig":"21"},{"size":5632,"mtime":1624125682320,"results":"34","hashOfConfig":"21"},{"size":689,"mtime":1624061418216,"results":"35","hashOfConfig":"21"},{"size":553,"mtime":1619923120620,"results":"36","hashOfConfig":"21"},{"size":572,"mtime":1624133116831,"results":"37","hashOfConfig":"21"},{"size":1269,"mtime":1624144023036,"results":"38","hashOfConfig":"21"},{"size":2055,"mtime":1624144015696,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1xprpbc",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/index.js",[],["83","84"],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/reportWebVitals.js",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/App.js",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/AppContext/AppContext.jsx",["85"],"import React, { createContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\n\n// https://e-shop-cp.herokuapp.com/api\nexport const AppContext = createContext();\n\nexport const ContextProvider = ({ children }) => {\n  const baseUrl = \"https://e-shop-cp.herokuapp.com/api\";\n  const token = localStorage.getItem(\"token\");\n  // const user = localStorage.getItem(\"user\");\n  const [selectedCategory, setSelectedCategory] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [categoryList, setCategoryList] = useState([]);\n  const [randomItems, setRandomItems] = useState([]);\n  const [currentUser, setCurrentUser] = useState();\n  const [drop, setDrop] = useState(\"\");\n  const [cart, setCart] = useState([]);\n  const [purchased, setPurchased] = useState();\n  const [logInModalShow, setLogInModalShow] = useState(false);\n  const [signUpModalShow, setSignUpModalShow] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  let storage = JSON.parse(localStorage.getItem(\"guestCart\"));\n  const guestCart = {\n    isOpen: true,\n    products: [],\n    cartQuantity: 0,\n    cartTotal: 0,\n  };\n\n  //Get list of categories\n  const getCategoryList = async () => {\n    axios\n      .get(`${baseUrl}/categories`)\n      .then((res) => {\n        setCategoryList(res.data);\n      })\n      .catch((err) => swal(err.message));\n  };\n\n  //Get product list\n  const getProductList = async () => {\n    axios\n      .get(`${baseUrl}/product/list`)\n      .then((res) => {\n        setProductList(res.data);\n      })\n      .catch((err) => swal(err.message));\n  };\n\n  //CART FUNCTIONS//\n  //Get cart\n  const getCart = async () => {\n    axios\n      .get(`${baseUrl}/cart`, {\n        headers: {\n          authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => setCart(res.data))\n      .catch((err) => swal(\"getCart\", err.message));\n  };\n\n  //INCREASE product quantity in cart\n  const increaseQty = async (product, cartId) => {\n    if (!token) {\n      console.log(\"no toke\");\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n      //find product index in guest cart\n      let index = guestCart.products\n        .map((product) => product.name)\n        .indexOf(product.name);\n      //update product quantity\n      guestCart.products[index].quantity =\n        guestCart.products[index].quantity + 1;\n      guestCart.products[index].productTotal =\n        guestCart.products[index].productTotal + product.price;\n      //recalculate cart totals\n      guestCart.cartTotal = guestCart.products\n        .map((product) => product.productTotal)\n        .reduce((acc, curr) => acc + curr);\n      guestCart.cartQuantity = guestCart.products\n        .map((product) => product.quantity)\n        .reduce((acc, curr) => acc + curr);\n      //save guest cart to state and local storage\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else if (token) {\n      try {\n        await axios\n          .put(\n            `${baseUrl}/cart/increase/${cartId}`,\n            { product, cartId },\n            {\n              headers: {\n                authorization: `Bearer ${token}`,\n              },\n            }\n          )\n          .then((res) => setCart(res.data), setLoading(false));\n      } catch (error) {\n        swal(\n          \"Please login or create an account to add items to your cart\",\n          error.message\n        );\n      }\n    }\n  };\n\n  //DECREASE product quantity in cart\n  const decreaseQty = async (product, cartId) => {\n    if (!token) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n      //find product index in guest cart\n      let index = guestCart.products\n        .map((product) => product.name)\n        .indexOf(product.name);\n      //update product quantity\n      guestCart.products[index].quantity =\n        guestCart.products[index].quantity - 1;\n      guestCart.products[index].productTotal =\n        guestCart.products[index].productTotal - product.price;\n      //recalculate cart totals\n      guestCart.cartTotal = guestCart.products\n        .map((product) => product.productTotal)\n        .reduce((acc, curr) => acc + curr);\n      guestCart.cartQuantity = guestCart.products\n        .map((product) => product.quantity)\n        .reduce((acc, curr) => acc + curr);\n      //save guest cart to state and local storage\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else {\n      try {\n        await axios\n          .put(\n            `${baseUrl}/cart/decrease/${cartId}`,\n            { product },\n            {\n              headers: {\n                authorization: `Bearer ${token}`,\n              },\n            }\n          )\n          .then((res) => setCart(res.data))\n          .catch((err) => swal(err.message));\n      } catch (error) {\n        swal(error.message);\n      }\n    }\n  };\n\n  //DELETE selected product from cart\n  const deleteProduct = async (product, cartId) => {\n    if (!token) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n      //remove selected product from guest cart\n      if (guestCart.products.length === 1) {\n        guestCart.products = [];\n        guestCart.cartTotal = 0;\n        guestCart.cartQuantity = 0;\n      } else if (guestCart.products.length > 1) {\n        guestCart.products = guestCart.products.filter(\n          (item) => item.name !== product.name\n        );\n        //recalculate cart totals\n        guestCart.cartTotal = guestCart.products\n          .map((product) => product.productTotal)\n          .reduce((acc, curr) => acc + curr);\n        guestCart.cartQuantity = guestCart.products\n          .map((product) => product.quantity)\n          .reduce((acc, curr) => acc + curr);\n      }\n\n      //save guest cart to state and local storage\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else {\n      try {\n        await axios\n          .put(\n            `${baseUrl}/cart/delete/${cartId}`,\n            { product, cartId },\n            {\n              headers: {\n                authorization: `Bearer ${token}`,\n              },\n            }\n          )\n          .then((res) => setCart(res.data))\n          .catch((err) => swal(err.message));\n      } catch (error) {\n        swal(error.message);\n      }\n    }\n  };\n  // const getRandom = () => {\n  //   const randomIndex = Math.floor(Math.random() * categoryList?.length);\n  //   const randomId = categoryList[randomIndex]?._id;\n\n  //   axios.get(`${baseUrl}/categories/${randomId}`).then((res) => {\n  //     setRandomItems(res.data);\n  //     console.log(res.data);\n  //   });\n  // };\n\n  useEffect(() => {\n    getCategoryList();\n    getProductList();\n    // getRandom();\n    if (!token && storage === null) {\n      setCart(guestCart);\n      localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n    } else if (!token && storage) {\n      let guestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n      setCart(guestCart);\n    }\n\n    if (token) {\n      localStorage.removeItem(\"guestCart\");\n      getCart();\n    }\n  }, [token]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        baseUrl,\n        randomItems,\n        setRandomItems,\n        isSignedIn,\n        setIsSignedIn,\n        logInModalShow,\n        setLogInModalShow,\n        signUpModalShow,\n        setSignUpModalShow,\n        selectedCategory,\n        setSelectedCategory,\n        selectedProduct,\n        setSelectedProduct,\n        loading,\n        setLoading,\n        categoryList,\n        setCategoryList,\n        productList,\n        currentUser,\n        setCurrentUser,\n        getCategoryList,\n        drop,\n        setDrop,\n        cart,\n        setCart,\n        token,\n        increaseQty,\n        decreaseQty,\n        deleteProduct,\n        purchased,\n        setPurchased,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/pages/Categories/Catgegories.jsx",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/pages/Home/Home.jsx",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/pages/itemList/itemList.jsx",["86"],"import axios from \"axios\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./itemList.scss\";\n// import Footer from \"../../components/Footer/Footer\";\nimport {\n  Nav,\n  Card,\n  CardDeck,\n  Form,\n  FormControl,\n  Button,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport { AppContext } from \"../../AppContext/AppContext\";\n\nfunction ItemList(props) {\n  const { categoryList, baseUrl } = useContext(AppContext);\n  const [selectedCategory, setSelectedCategory] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [drop, setDrop] = useState(\"\");\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n  const { id } = props.match.params;\n\n  const getSelected = () => {\n    axios.get(`${baseUrl}/categories/${id}`).then((res) => {\n      setSelectedCategory(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getSelected();\n    let current = categoryList.filter((cat) => {\n      return cat._id === id;\n    });\n    setDrop(current[0]?.name);\n  }, [categoryList, id]);\n  return (\n    <>\n      <section className=\"itemList\">\n        <div className=\"sub-nav\">\n          <Nav className=\"sub-nav__links\" activeKey=\"/home\">\n            <DropdownButton\n              id=\"dropdown-basic-button\"\n              variant=\"Secondary\"\n              title={drop}\n            >\n              {categoryList.map((cat) => {\n                return (\n                  <Dropdown.Item key={cat._id} href={`/categories/${cat._id}`}>\n                    {cat.name}\n                  </Dropdown.Item>\n                );\n              })}\n              <Dropdown.Item href={`/categories`}>Categories</Dropdown.Item>\n            </DropdownButton>\n            <div className=\"sub-nav__form\">\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  onChange={handleChange}\n                  placeholder=\"Search\"\n                  className=\"sub-nav__form--input\"\n                />\n                <Button className=\"sub-nav__form--button\" variant=\"outline\">\n                  Search\n                </Button>\n              </Form>\n            </div>\n          </Nav>\n        </div>\n        <div className=\"shop\">\n          <div className=\"shop__container\">\n            <CardDeck className=\"shop__card\">\n              {selectedCategory\n                ?.filter((item) => {\n                  return item.name.toLowerCase().includes(search.toLowerCase());\n                })\n                .map((product) => {\n                  return (\n                    <Card className=\"shop__card--indv\" key={product._id}>\n                      <Card.Body className=\"shop__card--body\">\n                        <Card.Link\n                          className=\"shop__card--top\"\n                          href={`/product/${product._id}`}\n                        >\n                          <Card.Img\n                            className=\"shop__card--img\"\n                            variant=\"top\"\n                            src={product.image}\n                          />\n                        </Card.Link>\n                      </Card.Body>\n                      <Card.Footer className=\"shop__card--footer\">\n                        <Card.Title>{product.name}</Card.Title>\n\n                        <small className=\"text-muted\">\n                          <Card.Text>{`$${product.price}`}</Card.Text>\n                        </small>\n                      </Card.Footer>\n                    </Card>\n                  );\n                })}\n            </CardDeck>\n          </div>\n        </div>\n      </section>\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default ItemList;\n","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/pages/ProductDetail/ProductDetail.jsx",["87"],"import axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\n// import Footer from \"../../components/Footer/Footer\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext } from \"../../AppContext/AppContext\";\nimport swal from \"sweetalert\";\nimport \"./ProductDetail.scss\";\n\nfunction OnSale(props) {\n  const [selectedProduct, setSelectedProduct] = useState([]);\n  const [quantity] = useState(1);\n  const { setCart, token, baseUrl } = useContext(AppContext);\n\n  const handleSubmit = (product) => {\n    const price = product.price.slice(0, 9).split(\",\").join(\"\");\n    //if not current user\n    if (!token) {\n      let storage = localStorage.getItem(\"guestCart\");\n      let guestCart = JSON.parse(storage);\n      const isExist = guestCart.products\n        .map((product) => product.name)\n        .includes(product.name);\n      if (!isExist) {\n        let newProduct = {\n          quantity: 1,\n          productTotal: Number(product.price),\n          productId: product._id,\n          name: product.name,\n          price: Number(product.price),\n          image: product.image,\n          category: product.category,\n        };\n        //add new product to guest cart\n        guestCart.products.push(newProduct);\n        //recalculate totals for cart\n        guestCart.cartTotal = guestCart.products\n          .map((product) => Number(product.productTotal))\n          .reduce((acc, curr) => acc + curr);\n        guestCart.cartQuantity = guestCart.products\n          .map((product) => Number(product.quantity))\n          .reduce((acc, curr) => acc + curr);\n        //save carts to state and local storage\n        localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n        setCart(guestCart);\n        swal(\"Success!\", \"Item has beeen added to cart\");\n      } else if (isExist) {\n        //find index of existing product in guest cart\n        const existingIndex = guestCart.products\n          .map((product) => product.name)\n          .indexOf(product.name);\n        //update existing product totals\n        guestCart.products[existingIndex].productTotal =\n          Number(guestCart.products[existingIndex].productTotal) +\n          Number(product.price);\n        guestCart.products[existingIndex].quantity =\n          Number(guestCart.products[existingIndex].quantity) + 1;\n        //recalculate cart totals\n        guestCart.cartTotal = guestCart.products\n          .map((product) => product.productTotal)\n          .reduce((acc, curr) => acc + curr);\n        guestCart.cartQuantity = guestCart.products\n          .map((product) => product.quantity)\n          .reduce((acc, curr) => acc + curr);\n        //save guest cart to state and local storage\n        setCart(guestCart);\n        swal(\"Success!\", \"Item has beeen updated\");\n        localStorage.setItem(\"guestCart\", JSON.stringify(guestCart));\n      }\n    }\n    if (token) {\n      axios\n        .post(\n          `${baseUrl}/cart`,\n          {\n            quantity,\n            product,\n            price,\n          },\n          {\n            headers: {\n              authorization: `Bearer ${token}`,\n            },\n          }\n        )\n        .then((res) => {\n          setCart(res.data);\n          swal(\"Success!\", \"Item has beeen added to cart\");\n        })\n        .catch((err) => swal(\"Please sign in to continue shopping\"));\n    }\n  };\n\n  useEffect(() => {\n    const { id } = props.match.params;\n    axios.get(`${baseUrl}/product/${id}`).then((res) => {\n      const selectedProduct = res.data;\n      setSelectedProduct(selectedProduct);\n    });\n  }, [props.match.params]);\n  return (\n    <>\n      <section className=\"section\">\n        <Link\n          className=\"product__back\"\n          to={`/categories/${selectedProduct.categoryId}`}\n        >\n          {\" \"}\n          {`Back To ${selectedProduct.category}`}\n        </Link>\n        <div className=\"product\">\n          <img\n            className=\"product__img\"\n            alt=\"product img\"\n            src={selectedProduct.image}\n          ></img>\n          <div className=\"product__details\">\n            <div className=\"product__details--top\">\n              <div className=\"product__details--info\">\n                <h1 className=\"product__details--title\">\n                  {selectedProduct.name}\n                </h1>\n                <h3 className=\"product__details--category\">\n                  {selectedProduct.category}\n                </h3>\n                <h4>{`Price: $${selectedProduct.price}`}</h4>\n              </div>\n              <div className=\"product__details--action\">\n                <div className=\"product__details--qty\"></div>\n                <Button\n                  onClick={() => {\n                    handleSubmit(selectedProduct);\n                  }}\n                  className=\"product__details--add\"\n                  variant=\"outline-dark\"\n                >\n                  ADD TO CART\n                </Button>\n              </div>\n            </div>\n            <div className=\"product__details--footer\">\n              <p>{selectedProduct.description}</p>\n            </div>\n          </div>\n        </div>\n        {/* <Footer /> */}\n      </section>\n    </>\n  );\n}\n\nexport default OnSale;\n","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Header/Header.jsx",["88"],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/pages/ShoppingCart/ShoppingCart.jsx",["89"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport CheckoutModal from \"../../components/CheckoutModal/CheckoutModal\";\nimport { AppContext } from \"../../AppContext/AppContext\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport \"./ShoppingCart.scss\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\n\nexport function ShoppingCart() {\n  const {\n    cart,\n    decreaseQty,\n    increaseQty,\n    deleteProduct,\n    purchased,\n    setCart,\n    token,\n  } = useContext(AppContext);\n\n  const [showCheckoutModal, setShowCheckoutModal] = useState(false);\n  let guestCart = JSON.parse(localStorage.getItem(\"guestCart\"));\n\n  const checkAuth = () => {\n    if (!token) {\n      swal(\"Please sign in to checkout\");\n    } else if (token) {\n      setShowCheckoutModal(true);\n    }\n  };\n\n  const renderPurchaseMessage = () => {\n    return <Redirect to=\"/\" />;\n  };\n\n  const renderEmptyCartMessage = () => {\n    return (\n      <div className=\"cart__alt\">\n        <h3 className=\"cart__alt--title\">Your cart</h3>\n        <p className=\"cart__alt--empty\">\n          No items in your cart, please continue shopping!\n        </p>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    if (!token) {\n      setCart(guestCart);\n    }\n  }, [token]);\n\n  if (purchased) {\n    return renderPurchaseMessage();\n  }\n\n  if (!cart?.products || cart?.products?.length < 1) {\n    return renderEmptyCartMessage();\n  }\n  return (\n    <section className=\"cart\">\n      <div className=\"cart__list\">\n        <div className=\"cart__list--title\"></div>\n        {cart?.products.map((product) => {\n          return (\n            //  ADJUST FONT SIZES FOR BREAKPOINTS\n            <Card key={product.productId} className=\"cart__card\">\n              <Card.Img\n                className=\"cart__card--image\"\n                variant=\"top\"\n                src={product.image}\n              />\n              <Card.Body className=\"cart__card--body\">\n                <Link to={`/product/${product.productId}`}>\n                  <Card.Title>{product.name}</Card.Title>\n                </Link>\n                <Card.Text>{`${product.category}`}</Card.Text>\n              </Card.Body>\n              <ListGroup className=\"cart__info\">\n                <ListGroupItem className=\"cart__info--price\">{`Price: $${product.productTotal.toFixed(\n                  2\n                )}`}</ListGroupItem>\n                <ListGroupItem className=\"cart__info--qty\">\n                  <div\n                    className=\"cart__info--sub\"\n                    onClick={() => {\n                      decreaseQty({ ...product }, cart._id);\n                    }}\n                  >\n                    -\n                  </div>\n                  {`Qty: ${product.quantity}`}\n                  <div\n                    className=\"cart__info--add\"\n                    onClick={() => {\n                      increaseQty({ ...product }, cart._id);\n                    }}\n                  >\n                    +\n                  </div>\n                </ListGroupItem>\n\n                <Button\n                  className=\"cart__info--remo\"\n                  onClick={() => {\n                    deleteProduct({ ...product }, cart._id);\n                  }}\n                >\n                  Remove\n                </Button>\n              </ListGroup>\n            </Card>\n          );\n        })}\n      </div>\n      {!cart && !cart ? (\n        <div />\n      ) : (\n        <div className=\"cart__footer\">\n          <div className=\"cart__footer--total\">\n            <h2>\n              Your total:{\" \"}\n              {/* <Badge variant=\"secondary\">{`$${cart?.cartTotal.toFixed(\n                2\n              )}`}</Badge> */}\n            </h2>\n            <h2>{`$${cart?.cartTotal.toFixed(2)}`}</h2>\n          </div>\n          <div className=\"cart__footer--qty\">\n            <h2>\n              Total items:\n              {/* <Badge variant=\"secondary\">{cart?.cartQuantity}</Badge> */}\n            </h2>\n            <h2>{cart?.cartQuantity}</h2>\n          </div>\n          <div className=\"cart__footer--action\">\n            <button\n              // onClick={() => setShowCheckoutModal(true)}\n              onClick={() => checkAuth()}\n              className=\"cart__footer--checkout\"\n            >\n              Checkout\n            </button>\n            <Link to=\"/categories\">\n              <button className=\"cart__footer--checkout\">\n                Continue Shopping\n              </button>\n            </Link>\n          </div>\n        </div>\n      )}\n\n      <Elements stripe={stripePromise}>\n        <CheckoutModal\n          show={showCheckoutModal}\n          onHide={() => setShowCheckoutModal(false)}\n        />\n      </Elements>\n    </section>\n  );\n}\n\nexport default ShoppingCart;\n","/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Carousel/Carousel.jsx",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/LoginModal/LogInModal.jsx",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/SignUpModal/SignUpModal.jsx",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/CheckoutModal/CheckoutModal.jsx",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Stripe/Stripe.jsx",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Field/Field.jsx",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Footer/Footer.jsx",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/Contact/Contact.jsx",[],"/Users/christopherpalacios/Desktop/christopher-palacios-capstone-c41/eShop/server/client/src/components/About/About.jsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":225,"column":6,"nodeType":"96","endLine":225,"endColumn":13,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":40,"column":6,"nodeType":"96","endLine":40,"endColumn":24,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":100,"column":6,"nodeType":"96","endLine":100,"endColumn":26,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"102","line":18,"column":6,"nodeType":"96","endLine":18,"endColumn":8,"suggestions":"103"},{"ruleId":"94","severity":1,"message":"104","line":54,"column":6,"nodeType":"96","endLine":54,"endColumn":13,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCart', 'guestCart', and 'storage'. Either include them or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'getSelected'. Either include it or remove the dependency array.",["109"],"React Hook useEffect has a missing dependency: 'baseUrl'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has missing dependencies: 'setCurrentUser' and 'user'. Either include them or remove the dependency array.",["111"],"React Hook useEffect has missing dependencies: 'guestCart' and 'setCart'. Either include them or remove the dependency array.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [getCart, guestCart, storage, token]",{"range":"123","text":"124"},"Update the dependencies array to be: [categoryList, getSelected, id]",{"range":"125","text":"126"},"Update the dependencies array to be: [baseUrl, props.match.params]",{"range":"127","text":"128"},"Update the dependencies array to be: [setCurrentUser, user]",{"range":"129","text":"130"},"Update the dependencies array to be: [guestCart, setCart, token]",{"range":"131","text":"132"},[7242,7249],"[getCart, guestCart, storage, token]",[1002,1020],"[categoryList, getSelected, id]",[3595,3615],"[baseUrl, props.match.params]",[747,749],"[setCurrentUser, user]",[1457,1464],"[guestCart, setCart, token]"]